<!DOCTYPE html>
<html lang="en">
    <!-- Einbindung des Kopf-Teils der Seite -->
    <%- include ('part/head') %>
<body>
    <!-- Einbindung der Navigationsleiste -->
    <%- include ('part/nav') %>
    <div class="mainContent">
        <div class="mainLeft">
            <p id="listName">
                <%=pageName%>
            </p>
            <div class="list">
                <!-- Überprüfen, ob Posts vorhanden sind und diese anzeigen -->
                <% if (posts && posts.length> 0) { %>
                    <% posts.forEach(element => { %>
                        <div class="card" style="width: 18rem;">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Id: <%= element.id %></li>
                                <li class="list-group-item">Username: <%= element.username %></li>
                                <li class="list-group-item">Passwort: <%= element.password %></li>
                                <li class="list-group-item">E-Mail: <%= element.email %></li>
                                <li class="list-group-item">Rolle: <%= element.role %></li>
                                <li class="list-group-item">Erstelldatum: <%= element.created %></li>
                            </ul>
                            <!-- Formular zum Löschen eines Benutzers -->
                            <form class="form-inline my-2" action="users/delete/<%=element.id%>">
                                <button class="btn btn-outline-success my-2 my-sm-0" id="buttonLöschen" type="submit">Löschen</button>
                            </form>
                            <!-- Formular zum Bearbeiten eines Benutzers -->
                            <form class="form-inline my-2" action="users/update/<%=element.id%>">
                                <button type="button" class="btn btn-outline-success my-2 my-sm-0" id="buttonChange" onclick="openEditModal('<%=element.id%>', '<%= element.username %>', '<%= element.password %>', '<%= element.email %>', '<%= element.role %>')">Editieren</button>
                            </form>
                        </div>
                    <% }); %>
                <% } else { %>
                    <!-- Nachricht, wenn keine Daten gefunden wurden -->
                    <p>No data found for the given ID.</p>
                <% } %>
            </div>
        </div>
        <div class="mainRight">
            <div class="searchName">
                <!-- Suchformular nach Benutzer-ID -->
                <form class="form-inline my-2" id="searchForm">
                    <label for="searchName"></label>
                    <input class="form-control mr-sm-2" type="text" placeholder="Benutzer-Id" aria-label="Search" id="searchId" required>
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit" id="buttonTop">Suchen</button>
                </form>
                <!-- Suchformular nach Benutzername -->
                <form class="form-inline my-2" id="searchForm2">
                    <label for="searchUserId"></label>
                    <input class="form-control mr-sm-2" type="text" placeholder="Name suchen" aria-label="Search" id="searchUserId" required>
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit" id="buttonTop">Suchen</button>
                </form>
            </div>
            <div class="NEW">
                <div class="newButtonWhole">
                    <p id="titleNew">Erstelle neuen <%=pageName%> Nr: </p>
                </div>
                <div id="contentNew">
                    <div class="listNewPost">
                        <!-- Formular zur Erstellung eines neuen Benutzers -->
                        <form id="newItemForm">
                            <label for="username">Username</label>
                            <input type="text" id="username" name="username" placeholder="Username" required>

                            <label for="passwort">Passwort</label>
                            <input type="text" id="passwort" name="passwort" placeholder="Passwort" required>

                            <label for="email">Email</label>
                            <input type="text" id="email" name="email" placeholder="Email" required>

                            <label for="rolle">Rolle</label>
                            <select id="rolle" name="rolle" required>
                                <option value="Standard">Standard</option>
                                <option value="Guest">Guest</option>
                            </select>

                            <button class="btn btn-outline-success my-2" id="buttonCreate" type="submit">Erstellen</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal-Fenster zum Bearbeiten eines Benutzers -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit User</h5>
                </div>
                <div class="modal-body">
                    <form id="editForm" action="/users/update" method="post">
                        <input type="hidden" id="editId">
                        <div class="form-group">
                            <label for="editUsername">Username</label>
                            <input type="text" class="form-control" id="editUsername">
                        </div>
                        <div class="form-group">
                            <label for="editPasswort">Passwort</label>
                            <input type="text" class="form-control" id="editPasswort" required>
                        </div>
                        <div class="form-group">
                            <label for="editEmail">Email</label>
                            <input type="text" class="form-control" id="editEmail" required>
                        </div>
                        <div class="form-group">
                            <label for="editRolle">Rolle</label>
                            <select id="editRolle" class="form-control" name="rolle" required>
                                <option value="Administrator">Administrator</option>
                                <option value="Standard">Standard</option>
                                <option value="Guest">Guest</option>
                            </select>
                        </div>
                        <div class="modal-footer" id="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" id="modalCloseButton">Schließen</button>
                            <button type="submit" class="btn btn-outline-success my-2 my-sm-0" id="saveChanges">Änderung speichern</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Öffnet das Bearbeitungs-Modal mit den gegebenen Benutzerdaten
        function openEditModal(id, username, password, email, role) {
            document.getElementById('editUsername').value = username;
            document.getElementById('editId').value = id;
            document.getElementById('editPasswort').value = password;
            document.getElementById('editEmail').value = email;
            document.getElementById('editRolle').value = role;
            document.getElementById('editModalLabel').textContent = `Edit User ${username}`;
            $('#editModal').modal('show');
        }

        // Ereignisbehandlung für das Erstellen eines neuen Benutzers
        document.getElementById('newItemForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const formData = {
                username: document.getElementById('username').value,
                passwort: document.getElementById('passwort').value,
                email: document.getElementById('email').value,
                rolle: document.getElementById('rolle').value
            };

            try {
                const response = await fetch('/users/post', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    alert('User created successfully!');
                    location.reload();
                } else {
                    const result = await response.json();
                    alert('Error: ' + result);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while creating the user.');
            }
        });

        // Ereignisbehandlung für das Bearbeiten eines Benutzers
        document.getElementById('editForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const formData = {
                id: document.getElementById('editId').value,
                username: document.getElementById('editUsername').value,
                passwort: document.getElementById('editPasswort').value,
                email: document.getElementById('editEmail').value,
                rolle: document.getElementById('editRolle').value
            };

            try {
                const response = await fetch('/users/update', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    alert('User updated successfully!');
                    $('#editModal').modal('hide');
                    location.reload();
                } else {
                    const result = await response.json();
                    alert('Error: ' + result);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while updating the user.');
            }
        });

        // Eventlistener zum Schließen des Modals
        document.getElementById('modalCloseButton').addEventListener('click', function () {
            $('#editModal').modal('hide');
        });

        // Eventlistener für das Suchformular
        document.getElementById('searchForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const usernameId = document.getElementById('searchId').value;
            fetch(`/users/id/${usernameId}`)
                .then(response => {
                    if (!response.ok) {
                        alert('User-ID nicht gefunden!')
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const list = document.querySelector('.list');
                    list.innerHTML = ''; // Clear the current list
                    if (data) {
                        const card = document.createElement('div');
                        card.className = 'card';
                        card.style.width = '18rem';
                        card.innerHTML = `
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">ID: ${data.id}</li>
                                <li class="list-group-item">Username: ${data.username}</li>
                                <li class="list-group-item">Passwort: ${data.password}</li>
                                <li class="list-group-item">E-Mail: ${data.email}</li>
                                <li class="list-group-item">Rolle: ${data.role}</li>
                                <li class="list-group-item">Erstelldatum: ${data.created}</li>
                            </ul>
                            <form class="form-inline my-2 my-lg-0" action="users/delete/${data.id}">
                                <button class="btn btn-outline-success my-2 my-sm-0" style="background-color :#b5c6b8;" type="submit">Löschen</button>
                            </form>
                            <form class="form-inline my-2 my-lg-0" action="users/edit/${data.id}">
                                <button type="button" class="btn btn-outline-success my-2 my-sm-0" style="background-color :#b5c6b8;" onclick="openEditModal('${data.id}', '${data.username}', '${data.password}', '${data.email}', '${data.role}')">Editieren</button>
                            </form>`;
                        list.appendChild(card);
                    } else {
                        list.innerHTML = '<p>No data found for the given username.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        });
        document.getElementById('searchForm2').addEventListener('submit', function (event) {
        event.preventDefault();
        const username = document.getElementById('searchUserId').value;

        fetch(`/users/byName?username=${encodeURIComponent(username)}`)
            .then(response => {
                if (!response.ok) {
                    alert('Username nicht gefunden!')
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Received data:', data); 
                if (Array.isArray(data) && data.length > 0) {
                    const list = document.querySelector('.list');
                    list.innerHTML = ''; 
                    data.forEach(user => {
                        console.log('Processing user:', user); 
                        const card = document.createElement('div');
                        card.className = 'card';
                        card.style.width = '18rem';
                        card.innerHTML = `
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">ID: ${user.id || '0'}</li>
                                <li class="list-group-item">Username: ${user.username || 'N/A' }</li>
                                <li class="list-group-item">Passwort: ${user.password || 'N/A'}</li>
                                <li class="list-group-item">E-Mail: ${user.email || 'N/A'}</li>
                                <li class="list-group-item">Rolle: ${user.role || 'N/A'}</li>
                                <li class="list-group-item">Erstelldatum: ${user.created ? new Date(user.created).toLocaleString() : 'N/A'}</li>
                            </ul>
                            <form class="form-inline my-2 my-lg-0" action="users/delete/${user.id}">
                                <button class="btn btn-outline-success my-2 my-sm-0" style="background-color: #b5c6b8;" type="submit">Löschen</button>
                            </form>
                            <form class="form-inline my-2 my-lg-0" action="users/edit/${user.id}">
                                <button type="button" class="btn btn-outline-success my-2 my-sm-0" style="background-color: #b5c6b8;" onclick="openEditModal('${user.id}', '${user.username}', '${user.password}', '${user.email}', '${user.role}')">Editieren</button>
                            </form>
                        `;
                        list.appendChild(card);
                    });
                } else {
                    const list = document.querySelector('.list');
                    list.innerHTML = '<p>No data found for the given username.</p>';
                }
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
        });
        </script>
        <%- include ('part/footer') %>
    </body>
</html>

